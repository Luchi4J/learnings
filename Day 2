/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> InorderTraversal(TreeNode root) {
     List<int> list = new List<int>();
     if(root == null){
         return list;
     }  
	Stack<TreeNode> newStack = new Stack<TreeNode>();
        TreeNode current = root;
	while(current != null || newStack.Count > 0) {
		
        while(current != null){
            newStack.Push(current);
            current = current.left;
        }
        current = newStack.Pop();
        list.Add(current.val);
		
		current = current.right;
		
	}
    return list;
}    
    }
